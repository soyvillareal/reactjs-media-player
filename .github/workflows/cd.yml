name: CD

concurrency: production

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        type: choice
        required: true
        description: Version
        options:
        - conventional
        - patch
        - minor
        - major
        - prerelease
        - from-package
        - from-git
      prerelease:
        type: choice
        description: Pre-release
        options:
        - alpha
        - canary
        - beta
      dryrun:
        description: 'Dry-run'
        type: boolean

run-name: Deploy ${{ inputs.version }} ${{ inputs.dryrun && '--dry-run' || '' }} ${{ inputs.prerelease && format('--prerelease {0}', inputs.prerelease) || '' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      id-token: write

    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          # this line is required for the setup-node action to be able to run the npm publish below.
          registry-url: 'https://registry.npmjs.org'
      - uses: fregante/setup-git-user@v1
      - run: npm ci
      - run: npm run lint
      - run: npm run test:cov
      - run: npm run build:lib
      - run: npm run build:demo
      - run: npm run build:dist
      - run: npm run build:standalone
      - run: npx --yes wet-run@1.0.1 release ${{ inputs.version }} ${{ inputs.dryrun && '--dry-run' || '' }} ${{ inputs.prerelease && format('--prerelease {0}', inputs.prerelease) || '' }} --provenance --github-release --verbose

      - name: Upload coverage reports to Codecov
        if: ${{ inputs.dryrun != null }}
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          files: ./coverage/lcov.info
          flags: unittests
          
      - name: Get NPM version
        id: npm-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        
      - name: Released ${{ steps.npm-version.outputs.current-version}} âœ¨
        run: echo ${{ steps.npm-version.outputs.current-version}}

      - name: Create GitHub Release
        if: ${{ inputs.version != '' && inputs.dryrun != null }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ inputs.version }}
          release_name: ${{ inputs.version }}
          body: |
            Release notes for ${{ inputs.version }}
            
            Provenance:
            - Commit: ${{ github.sha }}
            - Workflow: ${{ github.workflow }}
            - Job: ${{ github.job }}
          draft: ${{ inputs.dryrun || false }}
          prerelease: ${{ inputs.prerelease || false }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_STEP_DEBUG: true
